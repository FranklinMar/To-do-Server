// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: todo.proto
// Protobuf C++ Version: 5.29.3

#ifndef todo_2eproto_2epb_2eh
#define todo_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_todo_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_todo_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_todo_2eproto;
namespace ToDoService {
namespace v1 {
class AddItemReq;
struct AddItemReqDefaultTypeInternal;
extern AddItemReqDefaultTypeInternal _AddItemReq_default_instance_;
class AddItemRes;
struct AddItemResDefaultTypeInternal;
extern AddItemResDefaultTypeInternal _AddItemRes_default_instance_;
class GetListReq;
struct GetListReqDefaultTypeInternal;
extern GetListReqDefaultTypeInternal _GetListReq_default_instance_;
class GetListRes;
struct GetListResDefaultTypeInternal;
extern GetListResDefaultTypeInternal _GetListRes_default_instance_;
class StreamUpdateChangeReq;
struct StreamUpdateChangeReqDefaultTypeInternal;
extern StreamUpdateChangeReqDefaultTypeInternal _StreamUpdateChangeReq_default_instance_;
class StreamUpdateChangeRes;
struct StreamUpdateChangeResDefaultTypeInternal;
extern StreamUpdateChangeResDefaultTypeInternal _StreamUpdateChangeRes_default_instance_;
class ToDo;
struct ToDoDefaultTypeInternal;
extern ToDoDefaultTypeInternal _ToDo_default_instance_;
class UpdateItemReq;
struct UpdateItemReqDefaultTypeInternal;
extern UpdateItemReqDefaultTypeInternal _UpdateItemReq_default_instance_;
class UpdateItemRes;
struct UpdateItemResDefaultTypeInternal;
extern UpdateItemResDefaultTypeInternal _UpdateItemRes_default_instance_;
}  // namespace v1
}  // namespace ToDoService
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ToDoService {
namespace v1 {
enum Status : int {
  PENDING = 0,
  COMPLETED = 1,
  Status_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Status_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Status_IsValid(int value);
extern const uint32_t Status_internal_data_[];
constexpr Status Status_MIN = static_cast<Status>(0);
constexpr Status Status_MAX = static_cast<Status>(1);
constexpr int Status_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
Status_descriptor();
template <typename T>
const std::string& Status_Name(T value) {
  static_assert(std::is_same<T, Status>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Status_Name().");
  return Status_Name(static_cast<Status>(value));
}
template <>
inline const std::string& Status_Name(Status value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Status_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool Status_Parse(absl::string_view name, Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status>(
      Status_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class UpdateItemRes final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:ToDoService.v1.UpdateItemRes) */ {
 public:
  inline UpdateItemRes() : UpdateItemRes(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateItemRes* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateItemRes));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateItemRes(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateItemRes(const UpdateItemRes& from) : UpdateItemRes(nullptr, from) {}
  inline UpdateItemRes(UpdateItemRes&& from) noexcept
      : UpdateItemRes(nullptr, std::move(from)) {}
  inline UpdateItemRes& operator=(const UpdateItemRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateItemRes& operator=(UpdateItemRes&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateItemRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateItemRes* internal_default_instance() {
    return reinterpret_cast<const UpdateItemRes*>(
        &_UpdateItemRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(UpdateItemRes& a, UpdateItemRes& b) { a.Swap(&b); }
  inline void Swap(UpdateItemRes* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateItemRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateItemRes* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<UpdateItemRes>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const UpdateItemRes& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const UpdateItemRes& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ToDoService.v1.UpdateItemRes"; }

 protected:
  explicit UpdateItemRes(::google::protobuf::Arena* arena);
  UpdateItemRes(::google::protobuf::Arena* arena, const UpdateItemRes& from);
  UpdateItemRes(::google::protobuf::Arena* arena, UpdateItemRes&& from) noexcept
      : UpdateItemRes(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:ToDoService.v1.UpdateItemRes)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateItemRes& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_todo_2eproto;
};
// -------------------------------------------------------------------

class ToDo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ToDoService.v1.ToDo) */ {
 public:
  inline ToDo() : ToDo(nullptr) {}
  ~ToDo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ToDo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ToDo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ToDo(
      ::google::protobuf::internal::ConstantInitialized);

  inline ToDo(const ToDo& from) : ToDo(nullptr, from) {}
  inline ToDo(ToDo&& from) noexcept
      : ToDo(nullptr, std::move(from)) {}
  inline ToDo& operator=(const ToDo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ToDo& operator=(ToDo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ToDo& default_instance() {
    return *internal_default_instance();
  }
  static inline const ToDo* internal_default_instance() {
    return reinterpret_cast<const ToDo*>(
        &_ToDo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ToDo& a, ToDo& b) { a.Swap(&b); }
  inline void Swap(ToDo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ToDo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ToDo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ToDo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ToDo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ToDo& from) { ToDo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ToDo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ToDoService.v1.ToDo"; }

 protected:
  explicit ToDo(::google::protobuf::Arena* arena);
  ToDo(::google::protobuf::Arena* arena, const ToDo& from);
  ToDo(::google::protobuf::Arena* arena, ToDo&& from) noexcept
      : ToDo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kDescriptionFieldNumber = 2,
    kStatusFieldNumber = 3,
  };
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string description = 2;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // .ToDoService.v1.Status status = 3;
  void clear_status() ;
  ::ToDoService::v1::Status status() const;
  void set_status(::ToDoService::v1::Status value);

  private:
  ::ToDoService::v1::Status _internal_status() const;
  void _internal_set_status(::ToDoService::v1::Status value);

  public:
  // @@protoc_insertion_point(class_scope:ToDoService.v1.ToDo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      41, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ToDo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    int status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_todo_2eproto;
};
// -------------------------------------------------------------------

class StreamUpdateChangeReq final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:ToDoService.v1.StreamUpdateChangeReq) */ {
 public:
  inline StreamUpdateChangeReq() : StreamUpdateChangeReq(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StreamUpdateChangeReq* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StreamUpdateChangeReq));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StreamUpdateChangeReq(
      ::google::protobuf::internal::ConstantInitialized);

  inline StreamUpdateChangeReq(const StreamUpdateChangeReq& from) : StreamUpdateChangeReq(nullptr, from) {}
  inline StreamUpdateChangeReq(StreamUpdateChangeReq&& from) noexcept
      : StreamUpdateChangeReq(nullptr, std::move(from)) {}
  inline StreamUpdateChangeReq& operator=(const StreamUpdateChangeReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamUpdateChangeReq& operator=(StreamUpdateChangeReq&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StreamUpdateChangeReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const StreamUpdateChangeReq* internal_default_instance() {
    return reinterpret_cast<const StreamUpdateChangeReq*>(
        &_StreamUpdateChangeReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(StreamUpdateChangeReq& a, StreamUpdateChangeReq& b) { a.Swap(&b); }
  inline void Swap(StreamUpdateChangeReq* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamUpdateChangeReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StreamUpdateChangeReq* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<StreamUpdateChangeReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const StreamUpdateChangeReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const StreamUpdateChangeReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ToDoService.v1.StreamUpdateChangeReq"; }

 protected:
  explicit StreamUpdateChangeReq(::google::protobuf::Arena* arena);
  StreamUpdateChangeReq(::google::protobuf::Arena* arena, const StreamUpdateChangeReq& from);
  StreamUpdateChangeReq(::google::protobuf::Arena* arena, StreamUpdateChangeReq&& from) noexcept
      : StreamUpdateChangeReq(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:ToDoService.v1.StreamUpdateChangeReq)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StreamUpdateChangeReq& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_todo_2eproto;
};
// -------------------------------------------------------------------

class GetListReq final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:ToDoService.v1.GetListReq) */ {
 public:
  inline GetListReq() : GetListReq(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetListReq* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetListReq));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetListReq(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetListReq(const GetListReq& from) : GetListReq(nullptr, from) {}
  inline GetListReq(GetListReq&& from) noexcept
      : GetListReq(nullptr, std::move(from)) {}
  inline GetListReq& operator=(const GetListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetListReq& operator=(GetListReq&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetListReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetListReq* internal_default_instance() {
    return reinterpret_cast<const GetListReq*>(
        &_GetListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(GetListReq& a, GetListReq& b) { a.Swap(&b); }
  inline void Swap(GetListReq* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetListReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetListReq* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetListReq>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetListReq& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ToDoService.v1.GetListReq"; }

 protected:
  explicit GetListReq(::google::protobuf::Arena* arena);
  GetListReq(::google::protobuf::Arena* arena, const GetListReq& from);
  GetListReq(::google::protobuf::Arena* arena, GetListReq&& from) noexcept
      : GetListReq(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:ToDoService.v1.GetListReq)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetListReq& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_todo_2eproto;
};
// -------------------------------------------------------------------

class AddItemRes final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:ToDoService.v1.AddItemRes) */ {
 public:
  inline AddItemRes() : AddItemRes(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AddItemRes* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AddItemRes));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddItemRes(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddItemRes(const AddItemRes& from) : AddItemRes(nullptr, from) {}
  inline AddItemRes(AddItemRes&& from) noexcept
      : AddItemRes(nullptr, std::move(from)) {}
  inline AddItemRes& operator=(const AddItemRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddItemRes& operator=(AddItemRes&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddItemRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddItemRes* internal_default_instance() {
    return reinterpret_cast<const AddItemRes*>(
        &_AddItemRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(AddItemRes& a, AddItemRes& b) { a.Swap(&b); }
  inline void Swap(AddItemRes* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddItemRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddItemRes* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<AddItemRes>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const AddItemRes& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const AddItemRes& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ToDoService.v1.AddItemRes"; }

 protected:
  explicit AddItemRes(::google::protobuf::Arena* arena);
  AddItemRes(::google::protobuf::Arena* arena, const AddItemRes& from);
  AddItemRes(::google::protobuf::Arena* arena, AddItemRes&& from) noexcept
      : AddItemRes(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:ToDoService.v1.AddItemRes)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddItemRes& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_todo_2eproto;
};
// -------------------------------------------------------------------

class AddItemReq final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ToDoService.v1.AddItemReq) */ {
 public:
  inline AddItemReq() : AddItemReq(nullptr) {}
  ~AddItemReq() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AddItemReq* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AddItemReq));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddItemReq(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddItemReq(const AddItemReq& from) : AddItemReq(nullptr, from) {}
  inline AddItemReq(AddItemReq&& from) noexcept
      : AddItemReq(nullptr, std::move(from)) {}
  inline AddItemReq& operator=(const AddItemReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddItemReq& operator=(AddItemReq&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddItemReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddItemReq* internal_default_instance() {
    return reinterpret_cast<const AddItemReq*>(
        &_AddItemReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(AddItemReq& a, AddItemReq& b) { a.Swap(&b); }
  inline void Swap(AddItemReq* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddItemReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddItemReq* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AddItemReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddItemReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddItemReq& from) { AddItemReq::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AddItemReq* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ToDoService.v1.AddItemReq"; }

 protected:
  explicit AddItemReq(::google::protobuf::Arena* arena);
  AddItemReq(::google::protobuf::Arena* arena, const AddItemReq& from);
  AddItemReq(::google::protobuf::Arena* arena, AddItemReq&& from) noexcept
      : AddItemReq(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDescriptionFieldNumber = 2,
  };
  // string description = 2;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // @@protoc_insertion_point(class_scope:ToDoService.v1.AddItemReq)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      45, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddItemReq& from_msg);
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_todo_2eproto;
};
// -------------------------------------------------------------------

class UpdateItemReq final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ToDoService.v1.UpdateItemReq) */ {
 public:
  inline UpdateItemReq() : UpdateItemReq(nullptr) {}
  ~UpdateItemReq() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateItemReq* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateItemReq));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateItemReq(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateItemReq(const UpdateItemReq& from) : UpdateItemReq(nullptr, from) {}
  inline UpdateItemReq(UpdateItemReq&& from) noexcept
      : UpdateItemReq(nullptr, std::move(from)) {}
  inline UpdateItemReq& operator=(const UpdateItemReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateItemReq& operator=(UpdateItemReq&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateItemReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateItemReq* internal_default_instance() {
    return reinterpret_cast<const UpdateItemReq*>(
        &_UpdateItemReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(UpdateItemReq& a, UpdateItemReq& b) { a.Swap(&b); }
  inline void Swap(UpdateItemReq* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateItemReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateItemReq* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateItemReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateItemReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateItemReq& from) { UpdateItemReq::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateItemReq* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ToDoService.v1.UpdateItemReq"; }

 protected:
  explicit UpdateItemReq(::google::protobuf::Arena* arena);
  UpdateItemReq(::google::protobuf::Arena* arena, const UpdateItemReq& from);
  UpdateItemReq(::google::protobuf::Arena* arena, UpdateItemReq&& from) noexcept
      : UpdateItemReq(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTodoFieldNumber = 1,
  };
  // .ToDoService.v1.ToDo todo = 1;
  bool has_todo() const;
  void clear_todo() ;
  const ::ToDoService::v1::ToDo& todo() const;
  PROTOBUF_NODISCARD ::ToDoService::v1::ToDo* release_todo();
  ::ToDoService::v1::ToDo* mutable_todo();
  void set_allocated_todo(::ToDoService::v1::ToDo* value);
  void unsafe_arena_set_allocated_todo(::ToDoService::v1::ToDo* value);
  ::ToDoService::v1::ToDo* unsafe_arena_release_todo();

  private:
  const ::ToDoService::v1::ToDo& _internal_todo() const;
  ::ToDoService::v1::ToDo* _internal_mutable_todo();

  public:
  // @@protoc_insertion_point(class_scope:ToDoService.v1.UpdateItemReq)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateItemReq& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::ToDoService::v1::ToDo* todo_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_todo_2eproto;
};
// -------------------------------------------------------------------

class StreamUpdateChangeRes final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ToDoService.v1.StreamUpdateChangeRes) */ {
 public:
  inline StreamUpdateChangeRes() : StreamUpdateChangeRes(nullptr) {}
  ~StreamUpdateChangeRes() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StreamUpdateChangeRes* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StreamUpdateChangeRes));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StreamUpdateChangeRes(
      ::google::protobuf::internal::ConstantInitialized);

  inline StreamUpdateChangeRes(const StreamUpdateChangeRes& from) : StreamUpdateChangeRes(nullptr, from) {}
  inline StreamUpdateChangeRes(StreamUpdateChangeRes&& from) noexcept
      : StreamUpdateChangeRes(nullptr, std::move(from)) {}
  inline StreamUpdateChangeRes& operator=(const StreamUpdateChangeRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamUpdateChangeRes& operator=(StreamUpdateChangeRes&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StreamUpdateChangeRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const StreamUpdateChangeRes* internal_default_instance() {
    return reinterpret_cast<const StreamUpdateChangeRes*>(
        &_StreamUpdateChangeRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(StreamUpdateChangeRes& a, StreamUpdateChangeRes& b) { a.Swap(&b); }
  inline void Swap(StreamUpdateChangeRes* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamUpdateChangeRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StreamUpdateChangeRes* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StreamUpdateChangeRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StreamUpdateChangeRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StreamUpdateChangeRes& from) { StreamUpdateChangeRes::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StreamUpdateChangeRes* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ToDoService.v1.StreamUpdateChangeRes"; }

 protected:
  explicit StreamUpdateChangeRes(::google::protobuf::Arena* arena);
  StreamUpdateChangeRes(::google::protobuf::Arena* arena, const StreamUpdateChangeRes& from);
  StreamUpdateChangeRes(::google::protobuf::Arena* arena, StreamUpdateChangeRes&& from) noexcept
      : StreamUpdateChangeRes(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTodoFieldNumber = 1,
  };
  // .ToDoService.v1.ToDo todo = 1;
  bool has_todo() const;
  void clear_todo() ;
  const ::ToDoService::v1::ToDo& todo() const;
  PROTOBUF_NODISCARD ::ToDoService::v1::ToDo* release_todo();
  ::ToDoService::v1::ToDo* mutable_todo();
  void set_allocated_todo(::ToDoService::v1::ToDo* value);
  void unsafe_arena_set_allocated_todo(::ToDoService::v1::ToDo* value);
  ::ToDoService::v1::ToDo* unsafe_arena_release_todo();

  private:
  const ::ToDoService::v1::ToDo& _internal_todo() const;
  ::ToDoService::v1::ToDo* _internal_mutable_todo();

  public:
  // @@protoc_insertion_point(class_scope:ToDoService.v1.StreamUpdateChangeRes)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StreamUpdateChangeRes& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::ToDoService::v1::ToDo* todo_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_todo_2eproto;
};
// -------------------------------------------------------------------

class GetListRes final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ToDoService.v1.GetListRes) */ {
 public:
  inline GetListRes() : GetListRes(nullptr) {}
  ~GetListRes() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetListRes* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetListRes));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetListRes(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetListRes(const GetListRes& from) : GetListRes(nullptr, from) {}
  inline GetListRes(GetListRes&& from) noexcept
      : GetListRes(nullptr, std::move(from)) {}
  inline GetListRes& operator=(const GetListRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetListRes& operator=(GetListRes&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetListRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetListRes* internal_default_instance() {
    return reinterpret_cast<const GetListRes*>(
        &_GetListRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GetListRes& a, GetListRes& b) { a.Swap(&b); }
  inline void Swap(GetListRes* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetListRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetListRes* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetListRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetListRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetListRes& from) { GetListRes::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetListRes* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ToDoService.v1.GetListRes"; }

 protected:
  explicit GetListRes(::google::protobuf::Arena* arena);
  GetListRes(::google::protobuf::Arena* arena, const GetListRes& from);
  GetListRes(::google::protobuf::Arena* arena, GetListRes&& from) noexcept
      : GetListRes(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kToDoFieldNumber = 1,
  };
  // repeated .ToDoService.v1.ToDo ToDo = 1;
  int todo_size() const;
  private:
  int _internal_todo_size() const;

  public:
  void clear_todo() ;
  ::ToDoService::v1::ToDo* mutable_todo(int index);
  ::google::protobuf::RepeatedPtrField<::ToDoService::v1::ToDo>* mutable_todo();

  private:
  const ::google::protobuf::RepeatedPtrField<::ToDoService::v1::ToDo>& _internal_todo() const;
  ::google::protobuf::RepeatedPtrField<::ToDoService::v1::ToDo>* _internal_mutable_todo();
  public:
  const ::ToDoService::v1::ToDo& todo(int index) const;
  ::ToDoService::v1::ToDo* add_todo();
  const ::google::protobuf::RepeatedPtrField<::ToDoService::v1::ToDo>& todo() const;
  // @@protoc_insertion_point(class_scope:ToDoService.v1.GetListRes)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetListRes& from_msg);
    ::google::protobuf::RepeatedPtrField< ::ToDoService::v1::ToDo > todo_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_todo_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ToDo

// string id = 1;
inline void ToDo::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& ToDo::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ToDoService.v1.ToDo.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ToDo::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ToDoService.v1.ToDo.id)
}
inline std::string* ToDo::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:ToDoService.v1.ToDo.id)
  return _s;
}
inline const std::string& ToDo::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void ToDo::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* ToDo::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* ToDo::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ToDoService.v1.ToDo.id)
  return _impl_.id_.Release();
}
inline void ToDo::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ToDoService.v1.ToDo.id)
}

// string description = 2;
inline void ToDo::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& ToDo::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ToDoService.v1.ToDo.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ToDo::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ToDoService.v1.ToDo.description)
}
inline std::string* ToDo::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:ToDoService.v1.ToDo.description)
  return _s;
}
inline const std::string& ToDo::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void ToDo::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* ToDo::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* ToDo::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ToDoService.v1.ToDo.description)
  return _impl_.description_.Release();
}
inline void ToDo::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ToDoService.v1.ToDo.description)
}

// .ToDoService.v1.Status status = 3;
inline void ToDo::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::ToDoService::v1::Status ToDo::status() const {
  // @@protoc_insertion_point(field_get:ToDoService.v1.ToDo.status)
  return _internal_status();
}
inline void ToDo::set_status(::ToDoService::v1::Status value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:ToDoService.v1.ToDo.status)
}
inline ::ToDoService::v1::Status ToDo::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ToDoService::v1::Status>(_impl_.status_);
}
inline void ToDo::_internal_set_status(::ToDoService::v1::Status value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// -------------------------------------------------------------------

// GetListReq

// -------------------------------------------------------------------

// GetListRes

// repeated .ToDoService.v1.ToDo ToDo = 1;
inline int GetListRes::_internal_todo_size() const {
  return _internal_todo().size();
}
inline int GetListRes::todo_size() const {
  return _internal_todo_size();
}
inline void GetListRes::clear_todo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.todo_.Clear();
}
inline ::ToDoService::v1::ToDo* GetListRes::mutable_todo(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ToDoService.v1.GetListRes.ToDo)
  return _internal_mutable_todo()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::ToDoService::v1::ToDo>* GetListRes::mutable_todo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ToDoService.v1.GetListRes.ToDo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_todo();
}
inline const ::ToDoService::v1::ToDo& GetListRes::todo(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ToDoService.v1.GetListRes.ToDo)
  return _internal_todo().Get(index);
}
inline ::ToDoService::v1::ToDo* GetListRes::add_todo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::ToDoService::v1::ToDo* _add = _internal_mutable_todo()->Add();
  // @@protoc_insertion_point(field_add:ToDoService.v1.GetListRes.ToDo)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::ToDoService::v1::ToDo>& GetListRes::todo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ToDoService.v1.GetListRes.ToDo)
  return _internal_todo();
}
inline const ::google::protobuf::RepeatedPtrField<::ToDoService::v1::ToDo>&
GetListRes::_internal_todo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.todo_;
}
inline ::google::protobuf::RepeatedPtrField<::ToDoService::v1::ToDo>*
GetListRes::_internal_mutable_todo() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.todo_;
}

// -------------------------------------------------------------------

// AddItemReq

// string description = 2;
inline void AddItemReq::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& AddItemReq::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ToDoService.v1.AddItemReq.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddItemReq::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ToDoService.v1.AddItemReq.description)
}
inline std::string* AddItemReq::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:ToDoService.v1.AddItemReq.description)
  return _s;
}
inline const std::string& AddItemReq::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void AddItemReq::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* AddItemReq::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* AddItemReq::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ToDoService.v1.AddItemReq.description)
  return _impl_.description_.Release();
}
inline void AddItemReq::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ToDoService.v1.AddItemReq.description)
}

// -------------------------------------------------------------------

// AddItemRes

// -------------------------------------------------------------------

// UpdateItemReq

// .ToDoService.v1.ToDo todo = 1;
inline bool UpdateItemReq::has_todo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.todo_ != nullptr);
  return value;
}
inline void UpdateItemReq::clear_todo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.todo_ != nullptr) _impl_.todo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::ToDoService::v1::ToDo& UpdateItemReq::_internal_todo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ToDoService::v1::ToDo* p = _impl_.todo_;
  return p != nullptr ? *p : reinterpret_cast<const ::ToDoService::v1::ToDo&>(::ToDoService::v1::_ToDo_default_instance_);
}
inline const ::ToDoService::v1::ToDo& UpdateItemReq::todo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ToDoService.v1.UpdateItemReq.todo)
  return _internal_todo();
}
inline void UpdateItemReq::unsafe_arena_set_allocated_todo(::ToDoService::v1::ToDo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.todo_);
  }
  _impl_.todo_ = reinterpret_cast<::ToDoService::v1::ToDo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ToDoService.v1.UpdateItemReq.todo)
}
inline ::ToDoService::v1::ToDo* UpdateItemReq::release_todo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ToDoService::v1::ToDo* released = _impl_.todo_;
  _impl_.todo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ToDoService::v1::ToDo* UpdateItemReq::unsafe_arena_release_todo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ToDoService.v1.UpdateItemReq.todo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ToDoService::v1::ToDo* temp = _impl_.todo_;
  _impl_.todo_ = nullptr;
  return temp;
}
inline ::ToDoService::v1::ToDo* UpdateItemReq::_internal_mutable_todo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.todo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ToDoService::v1::ToDo>(GetArena());
    _impl_.todo_ = reinterpret_cast<::ToDoService::v1::ToDo*>(p);
  }
  return _impl_.todo_;
}
inline ::ToDoService::v1::ToDo* UpdateItemReq::mutable_todo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::ToDoService::v1::ToDo* _msg = _internal_mutable_todo();
  // @@protoc_insertion_point(field_mutable:ToDoService.v1.UpdateItemReq.todo)
  return _msg;
}
inline void UpdateItemReq::set_allocated_todo(::ToDoService::v1::ToDo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.todo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.todo_ = reinterpret_cast<::ToDoService::v1::ToDo*>(value);
  // @@protoc_insertion_point(field_set_allocated:ToDoService.v1.UpdateItemReq.todo)
}

// -------------------------------------------------------------------

// UpdateItemRes

// -------------------------------------------------------------------

// StreamUpdateChangeReq

// -------------------------------------------------------------------

// StreamUpdateChangeRes

// .ToDoService.v1.ToDo todo = 1;
inline bool StreamUpdateChangeRes::has_todo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.todo_ != nullptr);
  return value;
}
inline void StreamUpdateChangeRes::clear_todo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.todo_ != nullptr) _impl_.todo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::ToDoService::v1::ToDo& StreamUpdateChangeRes::_internal_todo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ToDoService::v1::ToDo* p = _impl_.todo_;
  return p != nullptr ? *p : reinterpret_cast<const ::ToDoService::v1::ToDo&>(::ToDoService::v1::_ToDo_default_instance_);
}
inline const ::ToDoService::v1::ToDo& StreamUpdateChangeRes::todo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ToDoService.v1.StreamUpdateChangeRes.todo)
  return _internal_todo();
}
inline void StreamUpdateChangeRes::unsafe_arena_set_allocated_todo(::ToDoService::v1::ToDo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.todo_);
  }
  _impl_.todo_ = reinterpret_cast<::ToDoService::v1::ToDo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ToDoService.v1.StreamUpdateChangeRes.todo)
}
inline ::ToDoService::v1::ToDo* StreamUpdateChangeRes::release_todo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ToDoService::v1::ToDo* released = _impl_.todo_;
  _impl_.todo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ToDoService::v1::ToDo* StreamUpdateChangeRes::unsafe_arena_release_todo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ToDoService.v1.StreamUpdateChangeRes.todo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ToDoService::v1::ToDo* temp = _impl_.todo_;
  _impl_.todo_ = nullptr;
  return temp;
}
inline ::ToDoService::v1::ToDo* StreamUpdateChangeRes::_internal_mutable_todo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.todo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ToDoService::v1::ToDo>(GetArena());
    _impl_.todo_ = reinterpret_cast<::ToDoService::v1::ToDo*>(p);
  }
  return _impl_.todo_;
}
inline ::ToDoService::v1::ToDo* StreamUpdateChangeRes::mutable_todo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::ToDoService::v1::ToDo* _msg = _internal_mutable_todo();
  // @@protoc_insertion_point(field_mutable:ToDoService.v1.StreamUpdateChangeRes.todo)
  return _msg;
}
inline void StreamUpdateChangeRes::set_allocated_todo(::ToDoService::v1::ToDo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.todo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.todo_ = reinterpret_cast<::ToDoService::v1::ToDo*>(value);
  // @@protoc_insertion_point(field_set_allocated:ToDoService.v1.StreamUpdateChangeRes.todo)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace ToDoService


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ToDoService::v1::Status> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ToDoService::v1::Status>() {
  return ::ToDoService::v1::Status_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // todo_2eproto_2epb_2eh
